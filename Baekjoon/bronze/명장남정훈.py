# 15734

# 오늘도 어김없이 피시방에서 피파를 하고 있는 정훈이는 큰 고민에 빠졌다
# 자신의 팀에 있는 선수들의 주 사용 발(Main Foot)이 적절하게 나워져있지 않기 때문이다
# 정훈이의 팀에는 L명의 왼발잡이 선수와 R명의 오른발잡이 선수, A명의 양발잡이 선수가 존재한다
# 양발잡이 선수는 오른발잡이 선수처럼 생각해도 되고 왼발잡이 선수로도 생각해도 된다
# 11명의 주전선수를 뽑기 전에 정훈이가 가진 팀원을 정리하려고 한다
# 정훈이는 왼발잡이와 오른발잡이 선수의 수를 같게 만든 다음 나머지 인원은 방출하려 한다
# 정훈이가 정리하고 난 다음 팀에 잔류하고 있는 선수의 최대 수를 구해보자

# 첫번째 줄에 왼발잡이 선수의 수 L, 오른발잡이 선수의 수 R, 양발잡이 선수의 수 A가 주어진다

# 첫번째 줄에 최대 잔류 인원 수를 출력

L, R, A = map(int, input().split())
print(min(L + A, R + A, L + R + A >> 1) * 2)
# L + A, R + A, L + R + A / 2의 값 중 가장 작은 값을 구함
# 두 개의 값을 더하거나 세 개의 값을 평균한 뒤
# 소수점 이하를 버리고 2를 곱하고 출력
# 이 과정에서 '(L + R + A) //2'로 나타남
# 즉 최종적으로 'min(L + A, R + A, (L + R + A) // 2) * 2'의 값 출력

# 문제는 L과 R을 최대한 비슷하게 만들어야하고 그 차이를 최소화하는 것이 목적
# 만약 L과 R 중 작은 값 x에 A값을 더하면 L과 R의 차이가 줄어들게 된다
# A값을 L과 R 사이에 골고루 분배해야 하기 때문에 A값을 모두 x에 더하면 안 된다
# 따라서 A값을 골고루 분배하기 위해서는 L과 R 사이의 차이보다 작거나
# 같은 값 중에서 A값을 최대한으로 더해야 한다
# 즉 min(L + A, R + A, L + R + A >> 1)는
# L + A, R + A, L + R + A // 2 중에서 가장 작은 값을 선택하는데
# L + R + A // 2는 L과 R 사이에 A값을 모두 분배한 경우를 나타낸다
# 그리고 2를 곱해 결과값을 두 배로 만든다
# 예를 들어 L = 3, R = 5, A = 2인 경우, L과 R 사이의 차이는 2이다
# L과 R 사이에 A값을 모두 더한 결과는 10이다
# 그러나 L과 R 사이에 A값을 골고루 분배하면 L + 1 + 1 = 5 또는 3 + 1 + 1 = 5가 된다
# 따라서 min(L + A, R + A, L + R + A >> 1)의 결과는 8이 된다
# 마지막으로 2를 곱하면 출력값은 16이 된다