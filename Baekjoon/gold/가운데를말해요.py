# 1655

# 백준이는 동생에게 '가운데를 말해요' 게임을 가르쳐주고 있다
# 백준이가 정수를 하나씩 외칠때마다 동생은 지금까지 백준이가
# 말한 수 중에서 중간값을 말해야 한다. 만약, 그동안 백준이가
# 외친 수의 개수가 짝수개라면 중간에 있는 두 수 중에서
# 작은 수를 말해야 한다
# 예를 들어, 백준이가 동생에게 1, 5, 2, 10, -99, 7, 5를 
# 순서대로 외쳤다고 하면, 동생은 1, 1, 2, 2, 2, 2, 5를 차례대로
# 말해야 한다. 백준이가 외치는 수가 주어졌을 때, 동생이 
# 말해야 하는 수를 구하라

# 첫째 줄에는 백준이가 외치는 정수의 개수 N이 주어진다
# 그다음 N줄에 걸쳐 백준이가 외치는 정수가 차례대로 주어진다

# 한 줄에 하나씩 N줄에 걸쳐 백준이의 동생이 말해야 하는
# 수를 순서대로 출력

import heapq, sys

# 최대 힙을 담을 리스트 초기화
max_heap = []
# 최소 힙을 담을 리스트 초기화
min_heap = []
N = int(sys.stdin.readline())
for i in range(N):
    x = int(sys.stdin.readline())
    if len(max_heap) == len(min_heap):
        heapq.heappush(max_heap, (-x, x))
    else:
        heapq.heappush(min_heap, (x, x))
    # 최소 힙이 비어있지 않고 최대 힙의 최댓값이 최소 힙의 최솟값보다 크면
    if min_heap and max_heap[0][1] > min_heap[0][1]:
        # 최대 힙에서 값을 pop하고, pop한 값을 다시 음수로 바꾼 뒤 최소 힙에 push
        max_value = heapq.heappop(max_heap)[1]
        # 최소 힙에서 값을 pop
        min_value = heapq.heappop(min_heap)[1]
        heapq.heappush(max_heap, (-min_value, min_value))
        heapq.heappush(min_heap, (max_value, max_value))
    print(max_heap[0][1])



# 이 문제에서는 최대 힙과 최소 힙을 이용하는 방법으로 
# 중간값을 구할 수 있다. 최대 힙은 값이 큰 것부터 차례대로
# 뽑히는 자료구조이고, 최소 힙은 값이 작은 것부터 차례대로
# 뽑히는 자료구조이다. 새로운 데이터가 입력될 때마다 최대
# 힙과 최소 힙을 유지하면서, 최대 힙의 최대값이 항상 최소
# 힙의 최소값보다 작도록 데이터를 넣으면 된다.
# 이렇게 최대 힙과 최소 힙을 이용하면, 중간값을 구하는데
# 필요한 모든 데이터를 정렬하지 않고도 중간값을 구할 수 있다

# (-x, x)는 x를 음수로 바꾼 값과 x를 함께 튜플로 묶은 것이다
# 이유는 파이썬의 heapq 모듈은 기본적으로 최소 힙이기
# 때문에, 최대 힙을 만들기 위해서는 모든 요소에 대해 음수로
# 바꾼 값을 이용해 최소 힙을 만들어야 한다. 그리고 최대 힙에서
# 값을 꺼낼 때는 다시 음수로 바꾼 값을 이용해 원래의 값으로 바꾼다.