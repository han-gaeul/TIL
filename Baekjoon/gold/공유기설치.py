# 2110

# 도현이의 집 N개가 수직선 위에 있다. 각각의 집의 좌표는 x1, ... xn이고
# 집 여러개가 같은 좌표를 가지는 일은 없다
# 도현이는 언제 어디서나 와이파이를 즐기기 위해서 집에 공유기 C개를
# 설치하려고 한다. 최대한 많은 곳에서 와이파이를 사용하려고 하기 때문에
# 한 집에는 공유기 하나만 설치할 수 있고, 가장 인접한 두 공유기 사이의
# 거리를 가능한 크게 하여 설치하려고 한다
# C개의 공유기를 N개의 집에 적당히 설치해서 가장 인접한 두 공유기
# 사이의 거리를 최대로 하라

# 첫째 줄에 집의 개수 N과 공유기의 개수 C가 하나 이상의
# 빈 칸을 사이에 두고 주어진다
# 둘째 줄부터 N개의 줄에는 집의 좌표를 나타내는 xi가
# 한 줄에 하나씩 주어진다

# 첫째 줄에 가장 인접한 두 공유기 사이의 최대 거리를 출력

import sys

N, C = map(int, sys.stdin.readline().split())
#집의 좌표를 입력받음
house = [int(sys.stdin.readline()) for _ in range(N)]
# 좌표 정렬
house.sort()
# 시작점과 끝점 설정
start, end = 1, house[-1] - house[0]
# 가장 인접한 두 공유기 사이의 최대 거리를 찾음
res = 0
while start <= end:
    mid = (start + end) // 2
    # 첫번째 집에는 반드시 공유기를 설치해야 함
    cnt = 1
    cur_house = house[0]
    # mid 값을 기준으로 공유기를 설치할 수 있는 집을 찾아
    # cnt 값을 구함
    for i in range(1, N):
        if house[i] - cur_house >= mid:
            cnt += 1
            cur_house = house[i]
    # C보다 많은 공유기를 설치할 수 있는 경우
    # mid 값을 더 크게 설정
    if cnt >= C:
        start = mid + 1
        # 최대 거리를 구하는 것이므로 mid 저장
        res = mid
    # C보다 적은 공유기를 설치할 수 있는 경우
    # mid 값을 더 작게 설정
    else:
        end = mid - 1
print(res)



# 공유기 사이의 거리를 이분 탐색으로 찾기 위해서는
# 우선 공유기 사이의 최대 거리를 정해야 한다
# 이 최대 거리를 mid라고 하고, mid 값으로 공유기를
# 설치해보면서 C개 이상의 공유기를 설치할 수 있는지 검사한다
# 설치하려는 공유기가 현재 공유기 위치와 mid 값에 따라
# 설치할 수 있는지를 확인하기 위해서는, 우선 첫번째
# 집엔느 무조건 공유기를 설치해야 하기 때문에 cnt를
# 1로 초기화한다. 그리고 다음 집부터 시작해 이전에
# 설치한 공유기와의 거리를 비교한다. 이전에 설치한 공유기와의
# 거리가 mid 이상이면, 해당 집에 공유기를 설치한다
# 설치한 공유기 수가 C개 이상이면 mid 값으로 공유기를 
# 설치한 경우는 가능한 것이므로, 공유기 사이의 최대
# 거리를 더 늘려볼 수 있다. 반대로 설치한 공유기 수가
# C개 미만이면 mid 값으로 공유기를 설치한 경우는 불가능한
# 것이므로 공유기 사이의 최대 거리를 출여야 한다