# 2293

# n가지 종류의 동전이 있다. 각각의 동전이 나타내는 가치는 다르다
# 이 동전을 적당히 사용해서 그 가치의 합이 k원이 되도록 하고 싶다
# 그 경우의 수를 구하시오. 각각의 동전은 몇 개라도 사용할 수 있다
# 사용한 동전의 구성이 같은데 순서만 다른 것은 같은 경우이다

# 첫째 줄에 n, k가 주어진다
# 다음 n개의 줄에는 각각의 동전의 가치가 주어진다.

# 첫째 줄에 경우의 수를 출력

n, k = map(int, input().split())
arr = [int(input()) for _ in range(n)]
# 동전 조합의 개수를 저장할 DP 리스트 초기화
dp = [0 for _ in range(k + 1)]
# 아무 동전도 사용하지 않았을 때의 조합 수 저장
dp[0] = 1
for i in arr:
    for j in range(i, k + 1):
        if j - i >= 0:
            dp[j] += dp[j - i]
print(dp[k])



# dp 리스트의 인덱스를 금액으로 설정하여, 금액을 만들기 위해
# 사용할 수 있는 동전의 가치를 이용해 dp 리스트를 갱신한다
# 예를 들어, 3원짜리 동전과 2원짜리 동전이 있을 때
# 5원을 만들기 위해 사용할 수 있는 경우의 수는 3원짜리 동전을
# 사용한 경우와 2원짜리 동전을 사용한 경우의 합이다
# 따라서 이 코드에서는 각 동전을 사용할 때마다 dp 리스트를 갱신하며
# 동전을 조합하여 만들 수 있는 금액의 경우의 수를 구한다
# 이를 위해 dp 리스트에서 인덱스 j에서 i를 뺀 값이 0 이상인 경우에만
# dp[j]에 dp[j - i]를 더한다. 이는 동전의 가치가 i원일 때
# j원을 만들기 위한 경우의 수를 dp[j - i]에서 가져와 dp[j]에 더하는 것이다.
# 이때, dp 리스트의 마지막 인덱스 dp[k]에는 주어진 금액 k를
# 만들기 위한 동전 조합의 경우의 수가 저장된다.