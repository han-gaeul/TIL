# 15711

# 환상의 나라 디디랜드에서는 인연의 증표로 끈을 하나씩 가지고 있다
# 그들은 지극히 평범한 방법으로 이 끈을 이용해 어떤 두 사람이
# 환상의 짝꿍인지 판단하는데 두 사람의 끈을 서로 이어붙이고
# 그 끈을 다시 길이가 소수인 끈 두개로 정확히 나눌 수 있다면
# 두 사람은 환상의 짝꿍이라고 한다. 하지만 그들은 길이가 소수인
# 두 개의 끈으로 나눌 수 있는지 판단하는 것이 어려워서
# 대부분 서로가 인연임을 모르고 그냥 지나간다고 한다.
# 그런 그들을 위해서 어떤 두 사람이 환상의 짝꿍인지 판단하는
# 프로그램을 작성하라. 편의상 두 사람의 끈을 이어붙일 때와
# 나눌 때 손실되는 끈의 길이는 0이라고 가정

# 첫째 줄에 테스트 케이스의 수 T가 주어진다
# 둘째 줄부터 T개 줄에 두 사람이 가지고 있는 큰의 길이를
# 나타내는 정수 A, B가 공백으로 구분되어 주어진다

# 각 테스트 케이스마다 한 줄씩 두 사람의 끈을 이어붙이고
# 그 끈을 다시 길이가 소수인 두개의 끈으로 정확히 나눌 수 있다면 YES,
# 불가능하다면 NO 출력

n = 2 * (10 ** 6)
arr = [False, False] + [True] * (n - 1)
# 에라토스테네스의 체 알고리즘을 이용해 소수를 구함
# 2부터 n의 제곱근까지의 숫자를 차례대로 확인하면서
# 해당 숫자가 소수인 경우 그의 배수들을 모두 소수가 아닌 것으로 처리
for i in range(2, int(n ** 0.5) + 1):
    if arr[i]:
        for j in range(2 * i, n + 1, i):
            arr[j] = False
# prime 리스트에 소수를 저장
prime = [i for i in range(2, n) if arr[i]]
T = int(input())
for _ in range(T):
    a, b = map(int, input().split())
    # a + b가 4미만인 경우
    # 두 소수의 합으로 표현할 수 없으므로 NO 출력
    if a + b < 4:
        print('NO')
    # a + b가 짝수인 경우
    # 두 소수의 합으로 표현할 수 있음
    elif not (a + b) % 2:
        print('YES')
    else:
        # a + b가 홀수인 경우 두 소수의 합으로 표현할 수 있는지 판단
        # a + b -2가 n 이상인 경우 소수를 모두 찾아보고 판단해야 하기 때문에
        # prime 리스트에서 찾아보고 소수인 경우 YES,
        # 소수가 아닌 경우 NO 출력
        # 2를 뺴는 이유는 골드바흐의 추측이 짝수에 대한 추측이기 때문
        if a + b - 2 >= n:
            flag = 0
            for p in prime:
                if not (a + b - 2) % p:
                    flag = 1
                    print('NO')
                    break
            if not flag:
                print('YES')
        # a + b -2가 n 미만인 경우 소수 여부를 바로 판단할 수 있음
        else:
            if a + b - 2 in prime:
                print('YES')
            else:
                print('NO')
# pypy3 1224ms



# 에라토스테네스의 체 알고리즘을 이용해 2부터 2백만까지의 모든 소수를 구한다
# 그리고 입력으로 주어진 a와 b가 두 소수의 합으로 표현될 수 있는지 판별