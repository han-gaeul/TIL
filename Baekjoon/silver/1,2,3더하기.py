# 9095

# 정수 4를 1, 2, 3의 합으로 나타내는 방법은 총 7가지가 있다
# 합을 나타낼 때는 수를 1개 이상 사용해야 한다
# 1 + 1 + 1 + 1
# 1 + 1 + 2
# 1 + 2 + 1
# 2 + 1 + 1
# 2 + 2
# 1 + 3
# 3 + 1
# 정수 n이 주어졌을 때 n을 1, 2, 3의 합으로 나타내는 방법의 수를 구하라

# 첫째 줄에 테스트 케이스의 개수 T가 주어진다
# 각 테스트 케이스는 한 줄로 이루어져 있고 정수 n이 주어진다

# 각 테스트 케이스마다 n을 1, 2, 3의 합으로 나타내는 방법의 수를 출력

T = int(input())
for i in range(T):
    n = int(input())
    # n이 11보다 작기 때문에 리스트의 길이는 12까지 선언
    li = [0] * 12
    li[1] = 1
    # 1, 2, 3으로 2를 나타내는 경우의 수를 나타냄
    li[2] = 2
    # 1, 2, 3으로 3을 나타내는 경우의 수를 나타냄
    # 이 경우의 수는 4이므로 li[3]에 4를 저장
    li[3] = 4
    # li[1], li[2], li[3]은 이미 1, 2, 3의 합으로 나타내는 경우의 수를 저장하고 있기 때문에
    # n이 3이하인 경우 추가적인 계산이 필요하지 않음
    if n > 3:
        for i in range(4, n + 1):
            li[i] = li[i - 1] + li[i - 2] + li[i - 3]
    print(li[n])


# li[i] = li[i - 1] + li[i - 2] + li[i - 3]를 계산하는 이유는
# i를 1, 2, 3의 합으로 나타내기 위해서는 마지막에 더한 수가 1, 2, 3 중 하나여야 한다
# 따라서 i - 1을 1, 2, 3의 합으로 나타내는 경우의 수에 1을 더하면
# i를 1, 2, 3의 합으로 나타내는 경우의 수가 된다
# i - 2를 1, 2, 3의 합으로 나타내는 경우의 수에 2를 더하고,
# i - 3을 1, 2, 3의 합으로 나타내는 경우의 수에 3을 더하면
# i를 1, 2, 3의 합으로 나타내는 경우의 수가 된다

# 리스트를 선언하여 동적 계획법을 이용하여 푸는 문제이다
# 동적 계획법이란 부분 문제의 해를 미리 구해놓고 이를 이용해 전체 문제의 해를 구하는 방법
# 동적 계획법을 사용하면 가능한 모든 부₩분수열을 구하지 않고도 문제를 효율적으로 해결할 수 있다