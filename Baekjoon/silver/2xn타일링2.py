# 11727

# 2 x n 직사각형을 1 x 2, 2 x 1과 2 x 2 타일로 채우는 방법의 수를 구하라

# 첫째 줄에 n이 주어진다

# 첫째 줄에 2 x n 크기의 직사각형을 채우는 방법의 수를 
# 10007로 나눈 나머지를 출력

n = int(input())
dp = [0] * (n + 1)
dp[1] = 1
if n >= 2:
    dp[2] = 3
    for i in range(3, n + 1):
        dp[i] = dp[i - 1] + (2 * dp[i - 2])
print(dp[n] % 10007)



# 2 x 1 타일로만 채울 경우 1가지의 방법 존재
# 2 x 2 타일로만 채울 경우 3가지 방법 존재
# i번째에 채워질 수 있는 경우의 수는 2가지가 있다
# 1. 2 x 1 타일 1개 사용 (i - 1) 경우의 수와 같음
# 2. 2 x 2 타일 1개와 2 x 1 타일 2개 사용 (i - 2) 경우의 수와 같음
# 따라서, dp[i] = dp[i - 1] + (2 * dp[i - 2])가 된다

# dp[i]를 채우는 방법이 dp[i - 1], dp[i - 2] * 2 두가지로 구성되어 있다
# dp[i - 2] * 2 부분에서 중복이 발생하지 않도록 하기 위해서는
# 2 x 2 타일로 채우는 경우를 따로 고려해야 한다
# 그러므로 dp[2]의 초기값은 3이 된다.
# 이와 같이 중복을 피하면서 dp[i]를 채우면 된다.