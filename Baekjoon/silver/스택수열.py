# 1874

# 스택은 기본적인 자료구조 중 하나로 컴퓨터 프로그램을 작성할 때 자주 이용되는 개념이다
# 스택은 자료를 넣는 입구와 자료를 뽑는 입구가 같아 제일 나중에 들어간 자료가 제일 먼저 나오는 특성이 있다
# 1부터 n까지의 수를 스택에 넣었다가 뽑아 늘어놓음으로써 하나의 수열을 만들 수 있다
# 이때 스택에 push 하는 순서는 반드시 오름차순을 지키도록 한다고 하자
# 임의의 수열이 주어졌을 때 스택을 이용해 그 수열을 만들 수 있는지 없는지
# 있다면 어떤 순서로 push와 pop 연산을 수행해야 하는지 알아낼 수 있다. 이를 계산하라

# 첫 줄에 n이 주어진다
# 둘째 줄부터 n개의 줄에는 수열을 이루는 1 이상 n 이하의 정수가 하나씩 순서대로 주어진다
# 같은 정수가 두 번 나오는 일은 없다

# 입력된 수열을 만들기 위해 필요한 연산을 한 줄에 한 개씩 출력
# push 연산은 +로, pop 연산은 -로 표현
# 불가능한 경우 NO 출력

import sys

n = int(sys.stdin.readline())
# 스택 리스트
stack = []
# push, pop 연산의 결과를 저장할 리스트
result = []
# 스택에 들어가고 있는 숫자 변수 선언
cnt = 0
# 주어진 수열을 스택으로 만들 수 있는지 없는지 표현하는 변수 선언
X = True
for _ in range(n):
    num = int(sys.stdin.readline())
    while cnt < num:
        cnt += 1
        stack.append(cnt)
        result.append('+')
    if stack[-1] == num:
        stack.pop()
        result.append('-')
    else:
        X = False
        break
if X == False:
    print('NO')
else:
    for i in result:
        print(i)



# 주어진 n개의 수열을 각각 처리하기 위해 for문으로 반복
# 각 수열이 들어오면 스택에 1부터 그 수까지 push 연산을 한다
# 이때 push 연산에 대한 기록으로 result 리스트에 '+' 문자를 추가한다
# 스택의 맨 위에 있는 수와 주어진 수열의 값을 비교해 같으면 pop 연산을 하고
# pop 연산에 대한 기록으로 result 리스트에 '-' 문자를 추가한다
# 스택의 맨 위의 수와 주어진 수열의 값이 다르면 X 변수에 False를 저장하고 반복을 종료한다
# 마지막으로 X 값이 False이면 주어진 수열을 스택으로 만들 수 없다는 뜻이기 때문에
# NO를 출력하고 True이면 result 리스트에 저장된 '+'와 '-' 문자를 출력한다