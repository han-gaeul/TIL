# 1931

# 한 개의 회의실이 있는데 이를 사용하고자 하는
# N개의 회의에 대하여 회의실 사용표를 만들려고 한다.
# 각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고
# 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는
# 회의의 최대 개수를 찾아보자
# 단, 회의는 한번 시작하면 중간에 중단될 수 없으며
# 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다
# 회의의 시작시간과 끝나는 시간이 같을 수도 있다
# 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다

# 첫째 줄에 회의의 수 N이 주어진다
# 둘째 줄부터 N + 1까지 각 회의의 정보가 주어지는데
# 이것은 공백을 사이에 두고 회의의 시작시간과
# 끝나는 시간이 주어진다

# 첫째 줄에 최대 사용할 수 있는 회의의 최대 개수를 출력

N = int(input())
meetings = []
for i in range(N):
    start, end = map(int, input().split())
    # 끝나는 시간 기준으로 정렬하기 위해
    # (end, start) 형태로 추가
    meetings.append((end, start))
meetings.sort()
cnt = 0
end_time = 0
for meeting in meetings:
    # 해당 회의의 시작 시간이
    # 현재 회의의 끝나는 시간 이후라면
    if meeting[1] >= end_time:
        cnt += 1
        # 현재 회의의 끝나는 시간을 업데이트
        end_time = meeting[0]
print(cnt)



# 그리디 알고리즘을 사용해 해결할 수 있는 문제
# 이 문제에서는 끝나는 시간이 빠른 순서대로 
# 회의를 선택하는 것이 최적의 선택이다.
# 따라서 입력 받은 회의들을 끝나는 시간이 빠른
# 순서대로 정렬한 후, 각 회의를 순서대로 선택하면서
# 해당 회의의 시작 시간이 현재 회의의 끝나는 
# 시간보다 크거나 같으면 선택한다. 이때, 현재 회의의
# 끝나는 시간을 선택한 회의의 끝나는 시간으로 업데이트한다
# 마지막으로 최대로 사용할 수 있는 회의의 개수를 출력한다