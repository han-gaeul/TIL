# 백준 4673
# 양의 정수 n에 대해서 d(n)을 
# n과 n의 각 자리수를 더하는 함수라고 정의
# 예 : d(75) = 75 + 7 + 5 = 87

# 양의 정수 n이 주어졌을 때 이 수를 시작해서
# n, d(n), d(d(n)), d(d(d(n))), ... 과 같은 무한 수열을 만들 수 있음
# 예 : 33으로 시작한다면 다음 수는 33 + 3 + 3 = 39
# 그 다음 수는 39 + 3 + 9 = 51, 다음 수는 51 + 5 + 1 = 57

# n을 d(n)의 생성자라고 한다
# 생성자가 없는 숫자를 셀프 넘버라고 함
# 100 보다 작은 셀프 넘버는 총 13개
# 1, 3, 5, 7, 9, 20, 31, 42, 53, 75, 86, 97

# 10000 보다 작거나 같은 셀프 넘버를
# 한 줄에 하나씩 출력하는 프로그램

def d(n):
    #* 생성자 n을 이용해 d(n)을 만듦
    #* int로 들어온 n을 str로 형변환하면 문자열(iterable)이 되고
    #* 그걸 map 함수를 이용해 다시 int로 바꾸면
    #* sum() 함수를 통해 각 자리 수의 합을 구할 수 있음
    n = n + sum(map(int, str(n)))
    return n

#* 셀프 넘버가 아닌 수(생성자가 있는 수(들이 들어갈 집합
nonSelfNum = set()

#* nonSelfNum 집합에 들어갈 수를 찾아 넣기
for i in range(1, 10001):
    nonSelfNum.add(d(i))

#* 셀프 넘버(생성자가 없는 수) 출력
for j in range(1, 10001):
    if j not in nonSelfNum:
        print(j)


#? 입력 되는 n을 문자열(str)로 바꾸는 이유
#? 예 : 850 이라는 n이 입력 될 때
#? 8, 5, 0처럼 하나씩 떼어서 더할 수 있게!
#? 그 안에서 850 + 8 + 5 + 0 을 더한 결과인 863을 
#? nonSelfNum에 넣음
#? 이렇게 하면 nonSelfNum에서는 생성자로 생겨난 수들이 모임