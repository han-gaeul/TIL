# 문자열 s가 주어졌을 때 s의 각 위치마다 자신보다 앞에 나왔으면서
# 자신과 가장 가까운 곳에 있는 같은 글자가 어디 있는지 알고 싶다
# 예를 들어 s = 'banana'라고 했을 때 각 글자들을 왼쪽부터
# 오른쪽으로 읽어 나가면서 다음과 같이 진행할 수 있다
# b는 처음 나왔기 때문에 자신의 앞에 같은 글자가 없다. 이는 -1로 표현
# a는 처음 나왔기 때문에 자신의 앞에 같은 글자가 없다. 이는 -1로 표현
# n은 처음 나왔기 때문에 자신의 앞에 같은 글자가 없다. 이는 -1로 표현
# a는 자신보다 두 칸 앞에 a가 있다. 이는 2로 표현
# n도 자신보다 두 칸 앞에 n이 있다. 이는 2로 표현
# a는 자신보다 두 칸, 네 칸 앞에 a가 있다. 이 중 가까운 것은
# 두 칸 앞이고, 이는 2로 표현
# 따라서 최종 결과물은 [-1, -1, -1, 2, 2, 2]가 된다
# 문자열 s가 주어질 때 위와 같이 정의된 연산을 수행하는 함수 완성

def solution(s):
    # 각 문자가 마지막으로 등장하는 위치와
    # 그 이전에 등장하는 위치 사이의 거리 저장할 리스트 생성
    answer = []
    # 각 문자의 마지막 등장 위치 저장할 딕셔너리 생성
    s_dict = {}
    for i in range(len(s)):
        if s[i] not in s_dict:
            answer.append(-1)
        else:
            # 마지막으로 문자가 등장하는 위치와
            # 그 이전에 등장하는 위치 사이의 거리를 계산해서 리스트에 추가
            answer.append(i - s_dict[s[i]])
        s_dict[s[i]] = i
    return answer