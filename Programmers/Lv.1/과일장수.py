# 과일 장수가 사과 상자를 포장하고 있다
# 사과는 상태에 따라 1점부터 k점까지의 점수로 분류하며
# k점이 최상품의 사과이고 1점이 최하품의 사과이다
# 사과 한 상자의 가격은 다음과 같이 결정된다
# 한 상자에 사과를 m개씩 담아 포장한다
# 상자에 담긴 사과 중 가장 낮은 점수가 p점인 경우
# 사과 한 상자의 가격은 p * m이다
# 과일 장수가 가능한 많은 사과를 팔았을 때 얻을 수 있는 최대 이익을
# 계산하고자 한다. (사과는 상자 단위로만 판매하며 남은 사과는 버린다)
# 예를 들어 k = 3, m = 4, 사과 7개의 점수가 [1, 2, 3, 1, 2, 3, 1]이라면
# 다음과 같이 [2, 3,. 2, 3]으로 구성된 사과 상자 1개를 만들어
# 판매하여 최대 이익을 얻을 수 있다
# 최저사과점수 x 한상자에담긴사과개수 x 상자의개수 = 2 x 4 x 1 = 8
# 사과의 최대 점수 k, 한 상자에 들어가는 사과의 수 m,
# 사과들의 점수 score가 주어졌을 때 과일 장수가 얻을 수 있는
# 최대 이익을 return

def solution(k, m, score):
    score.sort()
    answer = 0
    # m번째마다 가격 계산
    # -m으로 도는 이유는 최대 이익을 얻기 위해서
    # 등급이 높은 것부터 포장하기 위함
    for i in range(len(score), m - 1, -m):
        answer += score[i - m] * m
    return answer