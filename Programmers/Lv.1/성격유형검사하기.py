# 나만의 카카오 성격 유형 검사지를 만들려고 한다
# 성격 유형 검사는 다음과 같은 4개 지표로 성격 유형을 구분한다
# 성격은 각 지표에서 두 유형 중 하나로 결정된다
# 지표번호 성격유형
# 1번지표 라이언형(R), 튜브형(T)
# 2번지표 콘형(C), 프로도형(F)
# 3번지표 제이지형(J), 무지형(M)
# 4번지표 어피치형(A), 네오형(N)
# 4개의 지표가 있으므로 성격 유형은 총 16(2 x 2 x 2 x x)가지가 나올 수 있다
# 예를 들어 'RFMN'이냐 'TCMA'와 같은 성격 유형이 있다
# 검사지에는 총 n개의 질문이 있고 각 질문에는 아래와 같은 7개의 선택지가 있다
# 매우 비동의, 비동의, 약간 비동의, 모르겠음, 약간 동의, 동의, 매우 동의
# 각 질문은 1가지 지표로 성격 유형 점수를 판단한다
# 예를 들어 어떤 한 질문에서 4번 지표로 아래 표처럼 점수를 매길 수 있다
# 선택지 성격유형점수
# 매우비동의 네오형 3점
# 비동의 네오형 2점
# 약간비동의 네오형 1점
# 모르겠음 어떤 성격 유형도 점수를 얻지 않음
# 약간동의 어피치형 1점
# 동의 어피치형 2점
# 매우동의 어피치형 3점
# 이때 검사자가 질문에서 약간 동의 선택지를 선택할 경우 어피치형(A)
# 성격 유형 1점을 받게 된다. 만약 검사자가 매우 비동의를 선택할 경우
# 네오형(N) 성격 유형 3점을 받게 된다
# 위 예시처럼 네오형이 비동의, 어피치형이 동의인 경우만 주어지지 않고
# 질문에 따라 네오형이 동의, 어피치형이 비동의인 경우도 주어질 수 있다
# 하지만 각 선택지는 고정적인 크기의 점수를 가지고 있다
# 매우동의나 매우비동의를 선택하면 3점을 얻는다
# 동의나 비동의를 선택하면 2점을 얻는다
# 약간동의나 약간비동의를 선택하면 1점을 얻는다
# 모르겠음을 선택하면 점수를 얻지 않는다
# 검사 결과는 모든 질문의 성격 유형 점수를 더하여 각 지표에서 더 높은
# 점수를 받은 성격 유형이 검사자의 성격 유형이라고 판단한다
# 단, 하나의 지표에서 각 성격 유형 점수가 같으면 두 성격 유형 중
# 사전 순으로 빠른 성격 유형을 검사자의 성격 유형이라고 판단한다
# 질문마다 판단하는 지표를 담은 1차원 문자열 배열 survey와
# 검사자가 각 질문마다 선택한 선택지를 담은 1차원 정수 배열 choices가
# 매개변수로 주어진다. 이때, 검사자의 성격 유형 검사 결과를 지표 번호
# 순서대로 return

from collections import defaultdict

def solution(survey, choices):
    type = [('R', 'T'), ('C', 'F'), ('J', 'M'), ('A', 'N')]
    # 각 타입별로 가까운 경향을 표시할 딕셔너리 생성
    # 기본값은 0으로 설정
    personality = defaultdict(int)
    answer = ''
    # 각 타입별로 가까운 경향을 판단
    for i, j in zip(survey, choices):
        # 선택지가 4보다 작다면 해당 타입의 'T' or 'M'에 가까운 경향
        # 해당 타입에 대한 가까운 경향 값을 증가
        if j < 4:
            personality[i[0]] += (4 - j)
        # 선택지가 4보다 크다면 해당 타입의 'F' or 'N'에 가까운 경향
        # 해당 타입에 대한 가까운 경향 값을 증가
        elif j > 4:
            personality[i[1]] += (j - 4)
    # 각 타입별로 가까운 경향 판단
    for i in type:
        # 해당 타입의 'T' or 'M'에 가까운 값이 'F' or 'N'에 가까운 값보다 크거나 같다면
        # 해당 타입의 'T' or 'M'에 가까운 경향이므로 문자열에 해당 문자 추가
        if personality[i[0]] >= personality[i[1]]:
            answer += i[0]
        else:
            answer += i[1]
    return answer



# 첫번째 for문 안에 있는 if문에서 기준을 4로 한 이유는
# 매우 비동의 ~ 매우 동의 선택지를 1부터 9까지의 숫자로 표시했기 때문
# 따라서 숫자 4는 모르겠음 선택지를 의미하고
# 4보다 크다면 약간 동의 ~ 매우 동의를 선택한 것
# 4보다 작다면 매우 비동의 ~ 약간 동의를 선택한 것
