# 다음 규칙을 지키는 문자열을 올바른 괄호 문자열이라고 정의한다
# (), [], {}는 모두 올바른 괄호 문자열이다
# 만약 A가 올바른 괄호 문자열이라면, (A), [A], {A}도 올바른 괄호 문자열이다
# 예를 들어, []가 올바른 괄호 문자열이므로, ([])도 올바른 괄호 문자열이다
# 만약, A, B가 올바른 괄호 문자열이라면, AB도 올바른 괄호 문자열이다
# 예를 들어, {}와 ([])가 올바른 괄호 문자열이므로, {}([])도 올바른
# 괄호 문자열이다
# 대괄호, 중괄호, 소괄호로 이루어진 문자열 s가 매개변수로 주어진다
# 이 s를 왼쪽으로 x칸만큼 회전시켰을 때 s가 올바른 괄호 문자열이
# 되게 하는 x의 개수를 return

from collections import deque

def solution(s):
    # 경우의 수를 저장할 변수
    cnt = 0
    for x in range(len(s)):
        # deque 변환
        s = deque(s)
        # 왼쪽으로 한 칸씩 회전
        s.rotate(-1)
        # 문자열 변환
        ss = ''.join(s)
        # ss에 괄호가 있다면
        while '[]' in ss or '{}' in ss or '()' in ss:
            # 괄호 제거
            ss = ss.replace('[]', '').replace('{}', '').replace('()', '')
        # 모든 괄호가 올바르게 닫혔으면 빈 문자열이 됨
        if not ss:
            cnt += 1
    return cnt



# deque를 이용해 문자열을 회전하는데 이때 rotate() 메소드를 이용해
# 왼쪽으로 한 칸씩 회전시킨다.
# 회전시킨 문자열을 다시 문자열로 변환한 뒤에 while문을 이용해서
# 문자열에서 괄호를 모두 찾아 제거한다. 모든 괄호가 올바르게 닫혀 있다면
# ss는 빈 문자열이 된다. 이 경우 cnt를 1 증가시킨다.