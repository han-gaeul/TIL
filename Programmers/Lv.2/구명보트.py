# 무인도에 갇힌 사람들을 구명보트를 이용해 구출하려고 한다.
# 구명보트는 작아서 한 번에 최대 2명씩 밖에 탈 수 없고, 무게 제한도 있다
# 예를 들어, 사람들의 몸무게가 [70kg, 50kg, 80kg, 50kg]이고
# 구명보트의 무게 제한이 100kg이라면 2번째 사람과 4번째 사람은
# 같이 탈 수 있지만 1번째 사람과 3번째 사람의 무게의 합은 150kg이므로
# 구명보트의 무게 제한을 초과하여 같이 탈 수 없다
# 구명보트를 최대한 적게 사용해 모든 사람을 구출하려고 한다
# 사람들의 몸무게를 담은 배열 people과 무게 제한 limit이 매개변수로
# 주어질 때, 모든 사람을 구출하기 위해 필요한 구명보트 개수의 최솟값을 return

def solution(people, limit):
    # 몸무게가 가벼운 순으로 정렬
    people.sort()
    # 구명보트 개수
    cnt = 0
    # start는 몸무게가 가벼운 사람의 인덱스
    # end는 몸무게가 무거운 사람의 인덱스
    start, end = 0, len(people) - 1
    # start와 end가 교차할 때까지 반복
    while start <= end:
        # 가벼운 사람과 무거운 사람이 함께 탈 수 있는 경우
        if people[start] + people[end] <= limit:
            # 가벼운 사람 인덱스 증가
            start += 1
            # 무거운 사람 인덱스 감소
            end -= 1
        # 가벼운 사람과 무거운 사람이 함께 탈 수 없는 경우
        else:
            # 무거운 사람 인덱스 감소
            end -= 1
        # 구명보트 개수 증가
        cnt += 1
    return cnt



# 그리디 알고리즘으로 해결할 수 있다
# 먼저 주어진 사람들의 몸무게를 오름차순으로 정렬한다
# 이후 가장 몸무게가 큰 사람과 가장 몸무게가 작은 사람을 같이
# 보트에 태우고, 보트에 태운 두 사람의 인덱스를 각각 증가, 감소시킨다
# 그리고 보트의 무게를 초과하지 않도록 주의하면서 이 과정을
# 반복한다. 만약 보트에 두 사람을 태울 수 없다면, 가장 무거운
# 사람만 태워서 보내야 하기 때문에 보트를 한 번 더 사용해야 한다