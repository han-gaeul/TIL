# 경화를 과수원에서 귤을 수확했다. 경화는 수확한 귤 중 k개를 골라
# 상자 하나에 담아 판매하려고 한다. 그런데 수확한 귤의 크기가
# 일정하지 않아 보기에 좋지 않다고 생각한 경화는 귤을 크기별로 
# 분류했을 때 서로 다른 종류의 수를 최소화하고 싶다
# 예를 들어, 경화가 수확한 귤 8개의 크기가 [1, 3, 2, 5, 4, 5, 2, 3]이라고 하자
# 경화가 귤 6개를 판매하고 싶다면, 크기가 1, 4인 귤을 제외한 여섯 개의
# 귤을 상자에 담으면, 귤의 크기의 종류가 2, 3, 5로 총 3가지가 되며
# 이때가 서로 다른 종류가 최소일 때이다
# 경화가 한 상자에 담으려는 귤의 개수 k와 귤의 크기를 담은 배열
# tangerine이 매개변수로 주어진다. 경화가 귤 k개를 고를 때 크기가
# 서로 다른 종류의 수의 최솟값을 return

from collections import Counter

def solution(k, tangerine):
    answer = 0
    cnt = 0
    # 리스트의 각 원소의 개수를 셈
    counter = Counter(tangerine)
    # most_common을 이용해
    # 각 원소의 개수를 내림차순으로 정렬된 튜플 리스트 반환
    for i in counter.most_common():
        # 해당 원소의 개수를 cnt에 더함
        cnt += i[1]
        # 서로 다른 종류의 수를 1 증가
        answer += 1
        # k개 이상의 귤을 골랐을 때 종류의 수가 최소가 됨
        if cnt >= k:
            return answer