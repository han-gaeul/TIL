# 피보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여
# F(n) = F(n - 1) + F(n - 2)가 적용되는 수이다.
# 예를 들어, F(2) = F(0) + F(1) = 0 + 1 = 1
# F(3) = F(1) + F(2) = 1 + 1 = 2
# F(4) = F(2) + F(3) = 1 + 2 = 3
# F(5) = F(3) + F(4) = 2 + 3 = 5와 같이 이어진다
# 2 이상의 n이 입력되었을 때, n번째 피보나치 수를 1234567로
# 나눈 나머지를 return

def solution(n):
    # 초기값 설정
    # (F(0) = 0, F(1) = 1)
    answer = [0, 1]
    # 2부터 n까지 반복
    for i in range(2, n + 1):
        # F(n) = F(n - 1) + F(n - 2)를 이용해 계산
        answer.append((answer[i - 1] + answer[i - 2]) % 1234567)
    # n번째 피보나치 수 반환
    return answer[-1]



# 초기값을 0과 1로 설정하고, 그 다음부터 n까지 반복하며
# F(n) = F(n - 1) + F(n - 2)를 이용해서 계산한다
# 이를 위해서 리스트 answer를 만들어 answer[2]부터 
# n까지의 값을 구하고 1234567로 나머지를 구한다.
# 반복문이 끝난 후, answer의 마지막 값 즉, n번째
# 피보나치 수를 반환한다.